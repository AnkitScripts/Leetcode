class Solution{
    public boolean validPalindrome(String s){
        int i=0,j=s.length()-1;
        while(i<j){
            if(s.charAt(i)!=s.charAt(j)){    
                return (palin(s,i+1,j) || palin(s,i,--j));
            }
            i++;
            j--;
        }
        return true;
    }
    public boolean palin(String s , int start, int end){
        while(start<=end){
           if(s.charAt(start)!=s.charAt(end))return false;
           start++;
           end--;
        }
        return true;
    }
}
class Main{
  public static void main(String args[]){
    Solution obj = new Solution();
    System.out.println(obj.validPalindrome("abca")); //output true
  }
}
    

//Time Complexity O(n)
//Space Complexity O(1)
//Two Pointer concept
//focus on these 2 test cases while making logic 1)"aguokepatgbnvfqmgmlcupuufxoohdfpgjdmysgvhmvffcnqxjjxqncffvmhvgsymdjgpfdhooxfuupuculmgmqfvnbgtapekouga"
//2)"acxcybycxcxa"
